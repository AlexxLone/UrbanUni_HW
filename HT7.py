# Список grades содержит списки оценок для каждого ученика в алфавитном порядке.
# Например: 'Aaron' - [5, 3, 3, 5, 4]
# Множество students содержит неупорядоченную последовательность имён всех учеников в классе.
# Напишите программу, которая составляет словарь, используя grades и students,
# где ключом будет имя ученика, а значением - его средний балл.

grades = [[5, 3, 3, 5, 4], [2, 2, 2, 3], [4, 5, 5, 2], [4, 4, 3], [5, 5, 5, 4, 5]]
students = {'Johnny', 'Bilbo', 'Steve', 'Khendrik', 'Aaron'}
students_list = list(students)  # преобразуем множество студентов в список
students_list.sort()  # упорядочим полученныый список студентов по алфавиту
# print(students_list)
# подсчитаем средние значения оценок для каждого студента и запишем их в новый список grades_awg
grades_awg = list()
for item in grades:
    # возможно есть способы обойтись без цикла, которые мые еще не проходили
    # но мне в голову ничего, кроме цикла не пришло
    grades_awg.append(sum(item) / len(item))
# print(grades_awg)
print(dict(zip(students_list, grades_awg)))  # ответ, собственно
# для оьбъединения двух списков использовал функцию zip, которая возвращает
# итератор кортежей, где i-ый кортеж содержит i-ый элемент из каждого из переданных списков.
# И понятие итератора мы еще не проходили... :)